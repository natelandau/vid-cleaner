---
name: "Automated Tests"

on:
    workflow_dispatch:
    push:
        paths:
            - ".github/workflows/automated-tests.yml"
            - ".github/actions/**"
            - "**.py"
            - "pyproject.toml"
            - "poetry.lock"
        branches:
            - main
    pull_request:
        types:
            - opened
            - reopened
            - synchronize
        paths:
            - ".github/workflows/automated-tests.yml"
            - ".github/actions/**"
            - "**.py"
            - "pyproject.toml"
            - "poetry.lock"

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test-python-code:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                python-version: ["3.11", "3.12"]
        env:
            # Configure a constant location for the uv cache
            UV_CACHE_DIR: /tmp/.uv-cache
        steps:
            - name: Harden Security Runner
              uses: step-security/harden-runner@v2
              with:
                  egress-policy: block
                  disable-sudo: true
                  allowed-endpoints: >
                      api.github.com:443 api.snapcraft.io:443 auth.docker.io:443 files.pythonhosted.org:443 github.com:443 production.cloudflare.docker.com:443 pypi.org:443 registry-1.docker.io:443 storage.googleapis.com:443 astral.sh:443


            - uses: actions/checkout@v4

            # ----------------------------------------------
            # Setup Python, uv, and install project dependencies
            # ----------------------------------------------

            - name: Setup Python, uv, and the package
              uses: ./.github/actions/uv-python-package

            # ----------------------------------------------
            # Run tests
            # ----------------------------------------------

            - name: lint with ruff
              shell: bash
              run: uv run ruff check --no-fix src/

            - name: Run tests
              shell: bash
              run: uv run pytest tests/

            # ----------------------------------------------
            # Cleanup cache
            # ----------------------------------------------

            - name: Minimize uv cache
              shell: bash
              run: uv cache prune --ci
