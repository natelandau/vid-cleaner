[project]
    authors = [{ name = "Nate Landau", email = "github@natenate.org" }]
    dependencies = [
        "cappa>=0.27.2",
        "dynaconf>=3.2.11",
        "ffmpeg-progress-yield>=0.12.0",
        "ffmpeg-progress>=0.0.5",
        "ffmpeg-python>=0.2.0",
        "iso639-lang>=2.6.0",
        "nclutils>=0.2.1",
        "python-box>=7.3.2",
        "requests>=2.32.3",
        "rich>=14.0.0",
        "shellingham>=1.5.4",
        "validators>=0.35.0",
    ]
    description = "Tools to transcode, inspect and convert videos."
    license = { file = "LICENSE" }
    name = "vid-cleaner"
    readme = "README.md"
    requires-python = ">=3.11"
    version = "0.4.0"

    [project.urls]
        Homepage   = "https://github.com/natelandau/vid-cleaner"
        Repository = "https://github.com/natelandau/vid-cleaner"

    [project.scripts]
        vidcleaner = "vid_cleaner.vidcleaner:main"

[build-system]
    build-backend = "hatchling.build"
    requires      = ["hatchling"]

[dependency-groups]
    dev = [
        "commitizen>=4.6.3",
        "coverage>=7.8.0",
        "duty>=1.6.0",
        "mypy>=1.15.0",
        "pre-commit>=4.2.0",
        "pytest-clarity>=1.0.1",
        "pytest-cov>=6.1.1",
        "pytest-env>=1.1.5",
        "pytest-mock>=3.14.0",
        "pytest-pretty-terminal>=1.1.0",
        "pytest-sugar>=1.0.0",
        "pytest-xdist>=3.6.1",
        "pytest>=8.3.5",
        "ruff>=0.11.9",
        "types-requests>=2.32.0.20250328",
        "typos>=1.32.0",
        "yamllint>=1.37.1",
    ]

[tool.commitizen]
    bump_message               = "bump(release): v$current_version â†’ v$new_version"
    changelog_merge_prerelease = true
    tag_format                 = "v$version"
    update_changelog_on_bump   = true
    version_files              = ["src/vid_cleaner/constants.py:VERSION"]
    version_provider           = "pep621"

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
    exclude_lines = [
        'def __repr__',
        'except [\w\s\._]+ as .*:',
        'pragma: no cover',
        'raise Abort',
        'raise Exit',
        'raise cappa\.Exit',
    ]
    fail_under = 60
    precision = 1
    show_missing = true
    skip_covered = true

[tool.coverage.run]
    branch       = true
    command_line = "--module pytest"
    data_file    = ".cache/coverage"
    source       = ["src"]

[tool.coverage.xml]
    output = ".cache/coverage.xml"

[tool.mypy] # https://mypy.readthedocs.io/en/latest/config_file.html
    cache_dir                   = ".cache/mypy"
    disallow_any_unimported     = false
    disallow_subclassing_any    = false
    disallow_untyped_decorators = false
    disallow_untyped_defs       = true
    exclude                     = ['duties.py', 'tests/']
    follow_imports              = "normal"
    ignore_missing_imports      = true
    junit_xml                   = ".cache/mypy.xml"
    no_implicit_optional        = true
    pretty                      = false
    show_column_numbers         = true
    show_error_codes            = true
    show_error_context          = true
    strict_optional             = false
    warn_redundant_casts        = true
    warn_unreachable            = true
    warn_unused_ignores         = true

[tool.pytest.ini_options]
    addopts        = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --junitxml=.cache/pytest.xml"
    cache_dir      = ".cache/pytest"
    filterwarnings = ["error", "ignore::DeprecationWarning"]
    testpaths      = ["src", "tests"]
    xfail_strict   = true

[tool.ruff] # https://github.com/charliermarsh/ruff
    exclude        = [".cache", ".git", ".venv", "__pypackages__", "dist", "tmp"]
    fix            = true
    line-length    = 100
    output-format  = "grouped"
    src            = ["src", "tests"]
    target-version = "py310"

    [tool.ruff.lint]
        ignore = [
            "B006",   # mutable-argument-default
            "COM812", # Trailing comma missing
            "CPY001", # Missing copyright notice at top of file
            "D213",   # multi-line-summary-second-line
            "E501",   # line-too-long
            "S311",   # suspicious-non-cryptographic-random-usage
        ]
        per-file-ignores = { "tests/*.py" = [
            "A002",
            "A003",
            "ANN001",
            "ANN003",
            "ANN201",
            "ANN202",
            "ARG001",
            "ARG002",
            "ARG005",
            "D102",
            "DOC201",
            "DOC501",  # Raised exception missing from docstring
            "ERA001",
            "F403",
            "PGH003",
            "PLR0913",
            "PLR0917",
            "PLR2004",
            "PLR6301",
            "S101",
        ], "duties.py" = ["ANN001"] }
        preview = true
        select = ["ALL"]
        unfixable = ["F401"]
        # unfixable = ["E712", "ERA001", "F401", "F841", "UP007"]
        [tool.ruff.lint.mccabe]
            max-complexity = 10

        [tool.ruff.lint.pydocstyle]
            convention = "google"

        [tool.ruff.lint.pylint]
            max-args = 6

    [tool.ruff.format]
        indent-style              = "space"
        line-ending               = "auto"
        quote-style               = "double"
        skip-magic-trailing-comma = false
